/*
 *    비트 계산
 *    ===
 *     0,1
 *     
 *    ======================
 *        &(AND) |(OR)  ^(XOR)
 *          *       +     
 *    ======================
 *    0 0   0     0       0
 *    ======================
 *    0 1   0     1       1
 *    ======================
 *    1 0   0     1       1
 *    ======================
 *    1 1   1     1       0
 *    ======================
 *    
 *    예)
 *        10 & 6
 *        10 ===> 1010
 *        6  ===> 0110  &
 *                ====
 *                0010 => 2
 *                
 *                1010
 *                0110 |
 *                =====
 *                1110  => 14
 *                
 *                1010
 *                0110 ^
 *                ====
 *                1100 -> 12
 *                
 *                
 *      0000 1010
 *    =========== 1의 보수
 *      1111 0101
 *    =========== 2의 보수
 *      1111 0101
 *     +        1
 *     ==========
 *     1111 0110
 *     
 *     1111 0110
 */
public class 이항연산자_비트연산자 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println(~10);
		System.out.println(Integer.toBinaryString(-11));
		int a=56 & 17;
		int b=56 | 17;
		int c=56 ^ 17;
		System.out.println("a="+a);
		System.out.println("b="+b);
		System.out.println("c="+c);
		/*
		 *      56 => 2진법    17=> 이진법
		 *      32+16+8   10001
		 *      111000
		 *      010001 &
		 *      ======
		 *      010000 ==> 16
		 *      
		 *      111000
		 *      010001 |
		 *      ======
		 *      111001 ==> 57
		 *      
		 *      111000
		 *      010001 ^
		 *      ======
		 *      101001 ==> 41
		 */

	}

}
