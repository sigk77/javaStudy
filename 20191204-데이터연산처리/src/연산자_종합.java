/*
 *    데이터 저장(변수) ==== 데이터 가공
 *                       (연산자,제어문) => 메소드
 *    변수+메소드 == 클래스 (객체지향프로그램)
 *                ==================
 *                 재사용,수정,추가 가능하게 제작
 *                 ==== === === 오버로딩
 *                 상속   오버라이딩
 *              ==> 설계 (인터페이스)
 *              ==> 데이터 여러개 저장 ==> 자료구조
 *   ================================ 라이브러리 
 *   
 *   연산자 (자바에서 제공하는 연산자)
 *   단항연산자
 *     = 증감연산자 : 한개 증가,한개 감소 => ++ , --
 *       전치 연산자 : ++a , --a : 증가를 먼저하고 다른 연산수행
 *       후치 연산자 : a++ , a-- : 다른 연산 수행 후에 증가
 *     = 부정 연산자 = boolean => !
 *         => true->false , false->true
 *     = (true) : cast연산자 (형변환 연산자)
 *       byte < char < int < long < float < double
 *              short
 *       자동 형변환 (upcasting)
 *       강제 형변환 (downcasting)
 *       
 *       연산 => 같은 데이터형만 연산이 가능
 *              int + int
 *              =========
 *              double + double
 *              ===============
 *              
 *              10.5 + 10
 *                     ==
 *                     10.0
 *              'A'+1
 *              ===
 *               65   =====> 자동 형변환(자동으로 큰 데이터형으로 변환시켜줌)
 *               
 *               (int)10.5 + 10 => 20  ==> 강제형변환
 *   이항연산자
 *     = 산술연산자 (+,-,*,/,%)
 *     = 비트연산자 ( & , | , ^ )
 *                ==  ==  ==
 *                & => 직렬연산자
 *                | => 병렬연산자
 *     = 쉬프트연산자 ( << , >> ) : 비트 이동 연산자
 *     = 비교연산자 ( ==(같다) , != (같지 않다) , < (작다) , > , <= , >=)
 *       5==8 => false 7<8 ===> boolean
 *     = 논리연산자 ( && , || )
 *        true && false => false
 *        true || false => true
 *     = 대입연산자 ( = , += , -= , *= , /= .... op=)
 *   삼항연산자
 *     조건 ? 값1 : 값2
 *     => 조건 (ture) => 값1
 *     => 조건 (false) => 값2
 *     
 *     10%2==0?"짝수":"홀수" ==> if~else
 *     
 *     double d=123456.78;
 *     int a=(int)((d-123456)*100);
 *                    0.78 * 100 ==> 77 ==> double이 4,8비트라 78이 아님 
 *     float d=123456.78f;
 *     int a=(int)((d-123456)*100);
 *                    0.78 * 100 ==> 78.0 ==> 78 4비트로 맞춰줘서 78
 *              고로 출력해서 결과를 확인해볼 필요가 있음
 */
public class 연산자_종합 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
